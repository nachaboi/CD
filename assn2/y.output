Conflict in state 21 between rule 30 and token PLUS resolved as reduce.
Conflict in state 21 between rule 30 and token MINUS resolved as reduce.
Conflict in state 21 between rule 30 and token TIMES resolved as reduce.
Conflict in state 21 between rule 30 and token DIVIDE resolved as reduce.
Conflict in state 21 between rule 30 and token EQ resolved as reduce.
Conflict in state 21 between rule 30 and token NEQ resolved as reduce.
Conflict in state 21 between rule 30 and token LT resolved as reduce.
Conflict in state 21 between rule 30 and token LE resolved as reduce.
Conflict in state 21 between rule 30 and token GT resolved as reduce.
Conflict in state 21 between rule 30 and token GE resolved as reduce.
Conflict in state 21 between rule 30 and token AND resolved as reduce.
Conflict in state 21 between rule 30 and token OR resolved as reduce.
Conflict in state 53 between rule 39 and token PLUS resolved as reduce.
Conflict in state 53 between rule 39 and token MINUS resolved as reduce.
Conflict in state 53 between rule 39 and token TIMES resolved as reduce.
Conflict in state 53 between rule 39 and token DIVIDE resolved as reduce.
Conflict in state 53 between rule 39 and token EQ resolved as reduce.
Conflict in state 53 between rule 39 and token NEQ resolved as reduce.
Conflict in state 53 between rule 39 and token LT resolved as reduce.
Conflict in state 53 between rule 39 and token LE resolved as reduce.
Conflict in state 53 between rule 39 and token GT resolved as reduce.
Conflict in state 53 between rule 39 and token GE resolved as reduce.
Conflict in state 53 between rule 39 and token AND resolved as reduce.
Conflict in state 53 between rule 39 and token OR resolved as reduce.
Conflict in state 68 between rule 45 and token PLUS resolved as reduce.
Conflict in state 68 between rule 45 and token MINUS resolved as reduce.
Conflict in state 68 between rule 45 and token TIMES resolved as reduce.
Conflict in state 68 between rule 45 and token DIVIDE resolved as reduce.
Conflict in state 68 between rule 45 and token EQ resolved as reduce.
Conflict in state 68 between rule 45 and token NEQ resolved as reduce.
Conflict in state 68 between rule 45 and token LT resolved as reduce.
Conflict in state 68 between rule 45 and token LE resolved as reduce.
Conflict in state 68 between rule 45 and token GT resolved as reduce.
Conflict in state 68 between rule 45 and token GE resolved as reduce.
Conflict in state 68 between rule 45 and token AND resolved as reduce.
Conflict in state 68 between rule 45 and token OR resolved as reduce.
Conflict in state 69 between rule 26 and token PLUS resolved as reduce.
Conflict in state 69 between rule 26 and token MINUS resolved as reduce.
Conflict in state 69 between rule 26 and token TIMES resolved as shift.
Conflict in state 69 between rule 26 and token DIVIDE resolved as shift.
Conflict in state 69 between rule 26 and token EQ resolved as reduce.
Conflict in state 69 between rule 26 and token NEQ resolved as reduce.
Conflict in state 69 between rule 26 and token LT resolved as reduce.
Conflict in state 69 between rule 26 and token LE resolved as reduce.
Conflict in state 69 between rule 26 and token GT resolved as reduce.
Conflict in state 69 between rule 26 and token GE resolved as reduce.
Conflict in state 69 between rule 26 and token AND resolved as reduce.
Conflict in state 69 between rule 26 and token OR resolved as reduce.
Conflict in state 70 between rule 27 and token PLUS resolved as reduce.
Conflict in state 70 between rule 27 and token MINUS resolved as reduce.
Conflict in state 70 between rule 27 and token TIMES resolved as shift.
Conflict in state 70 between rule 27 and token DIVIDE resolved as shift.
Conflict in state 70 between rule 27 and token EQ resolved as reduce.
Conflict in state 70 between rule 27 and token NEQ resolved as reduce.
Conflict in state 70 between rule 27 and token LT resolved as reduce.
Conflict in state 70 between rule 27 and token LE resolved as reduce.
Conflict in state 70 between rule 27 and token GT resolved as reduce.
Conflict in state 70 between rule 27 and token GE resolved as reduce.
Conflict in state 70 between rule 27 and token AND resolved as reduce.
Conflict in state 70 between rule 27 and token OR resolved as reduce.
Conflict in state 71 between rule 28 and token PLUS resolved as reduce.
Conflict in state 71 between rule 28 and token MINUS resolved as reduce.
Conflict in state 71 between rule 28 and token TIMES resolved as reduce.
Conflict in state 71 between rule 28 and token DIVIDE resolved as reduce.
Conflict in state 71 between rule 28 and token EQ resolved as reduce.
Conflict in state 71 between rule 28 and token NEQ resolved as reduce.
Conflict in state 71 between rule 28 and token LT resolved as reduce.
Conflict in state 71 between rule 28 and token LE resolved as reduce.
Conflict in state 71 between rule 28 and token GT resolved as reduce.
Conflict in state 71 between rule 28 and token GE resolved as reduce.
Conflict in state 71 between rule 28 and token AND resolved as reduce.
Conflict in state 71 between rule 28 and token OR resolved as reduce.
Conflict in state 72 between rule 29 and token PLUS resolved as reduce.
Conflict in state 72 between rule 29 and token MINUS resolved as reduce.
Conflict in state 72 between rule 29 and token TIMES resolved as reduce.
Conflict in state 72 between rule 29 and token DIVIDE resolved as reduce.
Conflict in state 72 between rule 29 and token EQ resolved as reduce.
Conflict in state 72 between rule 29 and token NEQ resolved as reduce.
Conflict in state 72 between rule 29 and token LT resolved as reduce.
Conflict in state 72 between rule 29 and token LE resolved as reduce.
Conflict in state 72 between rule 29 and token GT resolved as reduce.
Conflict in state 72 between rule 29 and token GE resolved as reduce.
Conflict in state 72 between rule 29 and token AND resolved as reduce.
Conflict in state 72 between rule 29 and token OR resolved as reduce.
Conflict in state 73 between rule 31 and token PLUS resolved as shift.
Conflict in state 73 between rule 31 and token MINUS resolved as shift.
Conflict in state 73 between rule 31 and token TIMES resolved as shift.
Conflict in state 73 between rule 31 and token DIVIDE resolved as shift.
Conflict in state 73 between rule 31 and token EQ resolved as reduce.
Conflict in state 73 between rule 31 and token NEQ resolved as reduce.
Conflict in state 73 between rule 31 and token LT resolved as reduce.
Conflict in state 73 between rule 31 and token LE resolved as reduce.
Conflict in state 73 between rule 31 and token GT resolved as reduce.
Conflict in state 73 between rule 31 and token GE resolved as reduce.
Conflict in state 73 between rule 31 and token AND resolved as reduce.
Conflict in state 73 between rule 31 and token OR resolved as reduce.
Conflict in state 74 between rule 32 and token PLUS resolved as shift.
Conflict in state 74 between rule 32 and token MINUS resolved as shift.
Conflict in state 74 between rule 32 and token TIMES resolved as shift.
Conflict in state 74 between rule 32 and token DIVIDE resolved as shift.
Conflict in state 74 between rule 32 and token EQ resolved as reduce.
Conflict in state 74 between rule 32 and token NEQ resolved as reduce.
Conflict in state 74 between rule 32 and token LT resolved as reduce.
Conflict in state 74 between rule 32 and token LE resolved as reduce.
Conflict in state 74 between rule 32 and token GT resolved as reduce.
Conflict in state 74 between rule 32 and token GE resolved as reduce.
Conflict in state 74 between rule 32 and token AND resolved as reduce.
Conflict in state 74 between rule 32 and token OR resolved as reduce.
Conflict in state 75 between rule 33 and token PLUS resolved as shift.
Conflict in state 75 between rule 33 and token MINUS resolved as shift.
Conflict in state 75 between rule 33 and token TIMES resolved as shift.
Conflict in state 75 between rule 33 and token DIVIDE resolved as shift.
Conflict in state 75 between rule 33 and token EQ resolved as reduce.
Conflict in state 75 between rule 33 and token NEQ resolved as reduce.
Conflict in state 75 between rule 33 and token LT resolved as reduce.
Conflict in state 75 between rule 33 and token LE resolved as reduce.
Conflict in state 75 between rule 33 and token GT resolved as reduce.
Conflict in state 75 between rule 33 and token GE resolved as reduce.
Conflict in state 75 between rule 33 and token AND resolved as reduce.
Conflict in state 75 between rule 33 and token OR resolved as reduce.
Conflict in state 76 between rule 34 and token PLUS resolved as shift.
Conflict in state 76 between rule 34 and token MINUS resolved as shift.
Conflict in state 76 between rule 34 and token TIMES resolved as shift.
Conflict in state 76 between rule 34 and token DIVIDE resolved as shift.
Conflict in state 76 between rule 34 and token EQ resolved as reduce.
Conflict in state 76 between rule 34 and token NEQ resolved as reduce.
Conflict in state 76 between rule 34 and token LT resolved as reduce.
Conflict in state 76 between rule 34 and token LE resolved as reduce.
Conflict in state 76 between rule 34 and token GT resolved as reduce.
Conflict in state 76 between rule 34 and token GE resolved as reduce.
Conflict in state 76 between rule 34 and token AND resolved as reduce.
Conflict in state 76 between rule 34 and token OR resolved as reduce.
Conflict in state 77 between rule 35 and token PLUS resolved as shift.
Conflict in state 77 between rule 35 and token MINUS resolved as shift.
Conflict in state 77 between rule 35 and token TIMES resolved as shift.
Conflict in state 77 between rule 35 and token DIVIDE resolved as shift.
Conflict in state 77 between rule 35 and token EQ resolved as reduce.
Conflict in state 77 between rule 35 and token NEQ resolved as reduce.
Conflict in state 77 between rule 35 and token LT resolved as reduce.
Conflict in state 77 between rule 35 and token LE resolved as reduce.
Conflict in state 77 between rule 35 and token GT resolved as reduce.
Conflict in state 77 between rule 35 and token GE resolved as reduce.
Conflict in state 77 between rule 35 and token AND resolved as reduce.
Conflict in state 77 between rule 35 and token OR resolved as reduce.
Conflict in state 78 between rule 36 and token PLUS resolved as shift.
Conflict in state 78 between rule 36 and token MINUS resolved as shift.
Conflict in state 78 between rule 36 and token TIMES resolved as shift.
Conflict in state 78 between rule 36 and token DIVIDE resolved as shift.
Conflict in state 78 between rule 36 and token EQ resolved as reduce.
Conflict in state 78 between rule 36 and token NEQ resolved as reduce.
Conflict in state 78 between rule 36 and token LT resolved as reduce.
Conflict in state 78 between rule 36 and token LE resolved as reduce.
Conflict in state 78 between rule 36 and token GT resolved as reduce.
Conflict in state 78 between rule 36 and token GE resolved as reduce.
Conflict in state 78 between rule 36 and token AND resolved as reduce.
Conflict in state 78 between rule 36 and token OR resolved as reduce.
Conflict in state 79 between rule 37 and token PLUS resolved as shift.
Conflict in state 79 between rule 37 and token MINUS resolved as shift.
Conflict in state 79 between rule 37 and token TIMES resolved as shift.
Conflict in state 79 between rule 37 and token DIVIDE resolved as shift.
Conflict in state 79 between rule 37 and token EQ resolved as shift.
Conflict in state 79 between rule 37 and token NEQ resolved as shift.
Conflict in state 79 between rule 37 and token LT resolved as shift.
Conflict in state 79 between rule 37 and token LE resolved as shift.
Conflict in state 79 between rule 37 and token GT resolved as shift.
Conflict in state 79 between rule 37 and token GE resolved as shift.
Conflict in state 79 between rule 37 and token AND resolved as reduce.
Conflict in state 79 between rule 37 and token OR resolved as reduce.
Conflict in state 80 between rule 38 and token PLUS resolved as shift.
Conflict in state 80 between rule 38 and token MINUS resolved as shift.
Conflict in state 80 between rule 38 and token TIMES resolved as shift.
Conflict in state 80 between rule 38 and token DIVIDE resolved as shift.
Conflict in state 80 between rule 38 and token EQ resolved as shift.
Conflict in state 80 between rule 38 and token NEQ resolved as shift.
Conflict in state 80 between rule 38 and token LT resolved as shift.
Conflict in state 80 between rule 38 and token LE resolved as shift.
Conflict in state 80 between rule 38 and token GT resolved as shift.
Conflict in state 80 between rule 38 and token GE resolved as shift.
Conflict in state 80 between rule 38 and token AND resolved as shift.
Conflict in state 80 between rule 38 and token OR resolved as reduce.
Conflict in state 87 between rule 51 and token PLUS resolved as reduce.
Conflict in state 87 between rule 51 and token MINUS resolved as reduce.
Conflict in state 87 between rule 51 and token TIMES resolved as reduce.
Conflict in state 87 between rule 51 and token DIVIDE resolved as reduce.
Conflict in state 87 between rule 51 and token EQ resolved as reduce.
Conflict in state 87 between rule 51 and token NEQ resolved as reduce.
Conflict in state 87 between rule 51 and token LT resolved as reduce.
Conflict in state 87 between rule 51 and token LE resolved as reduce.
Conflict in state 87 between rule 51 and token GT resolved as reduce.
Conflict in state 87 between rule 51 and token GE resolved as reduce.
Conflict in state 87 between rule 51 and token AND resolved as reduce.
Conflict in state 87 between rule 51 and token OR resolved as reduce.
Conflict in state 116 between rule 50 and token PLUS resolved as reduce.
Conflict in state 116 between rule 50 and token MINUS resolved as reduce.
Conflict in state 116 between rule 50 and token TIMES resolved as reduce.
Conflict in state 116 between rule 50 and token DIVIDE resolved as reduce.
Conflict in state 116 between rule 50 and token EQ resolved as reduce.
Conflict in state 116 between rule 50 and token NEQ resolved as reduce.
Conflict in state 116 between rule 50 and token LT resolved as reduce.
Conflict in state 116 between rule 50 and token LE resolved as reduce.
Conflict in state 116 between rule 50 and token GT resolved as reduce.
Conflict in state 116 between rule 50 and token GE resolved as reduce.
Conflict in state 116 between rule 50 and token AND resolved as reduce.
Conflict in state 116 between rule 50 and token OR resolved as reduce.
Conflict in state 133 between rule 52 and token PLUS resolved as reduce.
Conflict in state 133 between rule 52 and token MINUS resolved as reduce.
Conflict in state 133 between rule 52 and token TIMES resolved as reduce.
Conflict in state 133 between rule 52 and token DIVIDE resolved as reduce.
Conflict in state 133 between rule 52 and token EQ resolved as reduce.
Conflict in state 133 between rule 52 and token NEQ resolved as reduce.
Conflict in state 133 between rule 52 and token LT resolved as reduce.
Conflict in state 133 between rule 52 and token LE resolved as reduce.
Conflict in state 133 between rule 52 and token GT resolved as reduce.
Conflict in state 133 between rule 52 and token GE resolved as reduce.
Conflict in state 133 between rule 52 and token AND resolved as reduce.
Conflict in state 133 between rule 52 and token OR resolved as reduce.
State 1 contains 2 shift/reduce conflicts.
State 4 contains 1 shift/reduce conflict.
State 86 contains 13 shift/reduce conflicts.
State 113 contains 12 shift/reduce conflicts.

Grammar
rule 1    program -> exp
rule 2    decs -> dec decs_ext
rule 3    decs ->		/* empty */
rule 4    decs_ext ->		/* empty */
rule 5    decs_ext -> dec decs_ext
rule 6    dec -> tydec
rule 7    dec -> vardec
rule 8    dec -> fundec
rule 9    tydec -> TYPE ID EQ ty
rule 10   ty -> ID
rule 11   ty -> LBRACE tyfields RBRACE
rule 12   ty -> ARRAY OF ID
rule 13   tyfields ->		/* empty */
rule 14   tyfields -> ID COLON ID tyfields_ext
rule 15   tyfields_ext -> COMMA ID COLON ID tyfields_ext
rule 16   tyfields_ext ->		/* empty */
rule 17   vardec -> VAR ID ASSIGN exp
rule 18   vardec -> VAR ID COLON ID ASSIGN exp
rule 19   fundec -> FUNCTION ID LPAREN tyfields RPAREN EQ exp
rule 20   fundec -> FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
rule 21   lvalue -> ID
rule 22   lvalue -> lvalue DOT ID
rule 23   lvalue -> lvalue LBRACK exp RBRACK
rule 24   exp -> INT
rule 25   exp -> NIL
rule 26   exp -> exp PLUS exp
rule 27   exp -> exp MINUS exp
rule 28   exp -> exp TIMES exp
rule 29   exp -> exp DIVIDE exp
rule 30   exp -> MINUS exp
rule 31   exp -> exp EQ exp
rule 32   exp -> exp NEQ exp
rule 33   exp -> exp LT exp
rule 34   exp -> exp LE exp
rule 35   exp -> exp GT exp
rule 36   exp -> exp GE exp
rule 37   exp -> exp AND exp
rule 38   exp -> exp OR exp
rule 39   exp -> ID ASSIGN exp
rule 40   exp -> BREAK
rule 41   exp -> LPAREN expseq RPAREN
rule 42   exp -> STRING
rule 43   exp -> LET decs IN expseq END
rule 44   exp -> lvalue
rule 45   exp -> lvalue ASSIGN exp
rule 46   exp -> ID LPAREN RPAREN
rule 47   exp -> ID LPAREN exp exp_com RPAREN
rule 48   exp -> LPAREN RPAREN
rule 49   exp -> IF exp THEN exp
rule 50   exp -> IF exp THEN exp ELSE exp
rule 51   exp -> WHILE exp DO exp
rule 52   exp -> FOR ID ASSIGN exp TO exp DO exp
rule 53   exp -> ID LBRACE ID EQ exp exp_comeq RBRACE
rule 54   exp -> ID LBRACE RBRACE
rule 55   exp -> ID LBRACK exp RBRACK OF exp
rule 56   exp -> ID LBRACK exp RBRACK
rule 57   exp_com -> COMMA exp exp_com
rule 58   exp_com ->		/* empty */
rule 59   exp_comeq -> COMMA ID EQ exp exp_comeq
rule 60   exp_comeq ->		/* empty */
rule 61   exp_ext -> SEMICOLON exp exp_ext
rule 62   exp_ext ->		/* empty */
rule 63   expseq -> exp exp_ext
rule 64   expseq ->		/* empty */

Terminals, with rules where they appear

$ (-1)
error (256)
ID (258) 9 10 12 14 15 17 18 19 20 21 22 39 46 47 52 53 54 55 56 59
STRING (259) 42
INT (260) 24
COMMA (261) 15 57 59
COLON (262) 14 15 18 20
SEMICOLON (263) 61
LPAREN (264) 19 20 41 46 47 48
RPAREN (265) 19 20 41 46 47 48
LBRACK (266) 23 55 56
RBRACK (267) 23 55 56
LBRACE (268) 11 53 54
RBRACE (269) 11 53 54
DOT (270) 22
PLUS (271) 26
MINUS (272) 27 30
TIMES (273) 28
DIVIDE (274) 29
EQ (275) 9 19 20 31 53 59
NEQ (276) 32
LT (277) 33
LE (278) 34
GT (279) 35
GE (280) 36
AND (281) 37
OR (282) 38
ASSIGN (283) 17 18 39 45 52
ARRAY (284) 12
IF (285) 49 50
THEN (286) 49 50
ELSE (287) 50
WHILE (288) 51
FOR (289) 52
TO (290) 52
DO (291) 51 52
LET (292) 43
IN (293) 43
END (294) 43
OF (295) 12 55
BREAK (296) 40
NIL (297) 25
FUNCTION (298) 19 20
VAR (299) 17 18
TYPE (300) 9
UMINUS (301)

Nonterminals, with rules where they appear

program (47)
    on left: 1
decs (48)
    on left: 2 3, on right: 43
decs_ext (49)
    on left: 4 5, on right: 2 5
dec (50)
    on left: 6 7 8, on right: 2 5
tydec (51)
    on left: 9, on right: 6
ty (52)
    on left: 10 11 12, on right: 9
tyfields (53)
    on left: 13 14, on right: 11 19 20
tyfields_ext (54)
    on left: 15 16, on right: 14 15
vardec (55)
    on left: 17 18, on right: 7
fundec (56)
    on left: 19 20, on right: 8
lvalue (57)
    on left: 21 22 23, on right: 22 23 44 45
exp (58)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right: 1 17 18
    19 20 23 26 27 28 29 30 31 32 33 34 35 36 37 38 39 45 47 49 50
    51 52 53 55 56 57 59 61 63
exp_com (59)
    on left: 57 58, on right: 47 57
exp_comeq (60)
    on left: 59 60, on right: 53 59
exp_ext (61)
    on left: 61 62, on right: 61 63
expseq (62)
    on left: 63 64, on right: 41 43


state 0

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    program	go to state 146
    lvalue	go to state 12
    exp 	go to state 13



state 1

    lvalue  ->  ID .   (rule 21)
    exp  ->  ID . ASSIGN exp   (rule 39)
    exp  ->  ID . LPAREN RPAREN   (rule 46)
    exp  ->  ID . LPAREN exp exp_com RPAREN   (rule 47)
    exp  ->  ID . LBRACE ID EQ exp exp_comeq RBRACE   (rule 53)
    exp  ->  ID . LBRACE RBRACE   (rule 54)
    exp  ->  ID . LBRACK exp RBRACK OF exp   (rule 55)
    exp  ->  ID . LBRACK exp RBRACK   (rule 56)

    LPAREN	shift, and go to state 14
    LBRACK	shift, and go to state 15
    LBRACE	shift, and go to state 16
    ASSIGN	shift, and go to state 17

    LBRACK	[reduce using rule 21 (lvalue)]
    ASSIGN	[reduce using rule 21 (lvalue)]
    $default	reduce using rule 21 (lvalue)



state 2

    exp  ->  STRING .   (rule 42)

    $default	reduce using rule 42 (exp)



state 3

    exp  ->  INT .   (rule 24)

    $default	reduce using rule 24 (exp)



state 4

    exp  ->  LPAREN . expseq RPAREN   (rule 41)
    exp  ->  LPAREN . RPAREN   (rule 48)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    RPAREN	shift, and go to state 18
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    RPAREN	[reduce using rule 64 (expseq)]
    $default	reduce using rule 64 (expseq)

    lvalue	go to state 12
    exp 	go to state 19
    expseq	go to state 20



state 5

    exp  ->  MINUS . exp   (rule 30)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 21



state 6

    exp  ->  IF . exp THEN exp   (rule 49)
    exp  ->  IF . exp THEN exp ELSE exp   (rule 50)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 22



state 7

    exp  ->  WHILE . exp DO exp   (rule 51)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 23



state 8

    exp  ->  FOR . ID ASSIGN exp TO exp DO exp   (rule 52)

    ID  	shift, and go to state 24



state 9

    exp  ->  LET . decs IN expseq END   (rule 43)

    FUNCTION	shift, and go to state 25
    VAR 	shift, and go to state 26
    TYPE	shift, and go to state 27

    $default	reduce using rule 3 (decs)

    decs	go to state 28
    dec 	go to state 29
    tydec	go to state 30
    vardec	go to state 31
    fundec	go to state 32



state 10

    exp  ->  BREAK .   (rule 40)

    $default	reduce using rule 40 (exp)



state 11

    exp  ->  NIL .   (rule 25)

    $default	reduce using rule 25 (exp)



state 12

    lvalue  ->  lvalue . DOT ID   (rule 22)
    lvalue  ->  lvalue . LBRACK exp RBRACK   (rule 23)
    exp  ->  lvalue .   (rule 44)
    exp  ->  lvalue . ASSIGN exp   (rule 45)

    LBRACK	shift, and go to state 33
    DOT 	shift, and go to state 34
    ASSIGN	shift, and go to state 35

    $default	reduce using rule 44 (exp)



state 13

    program  ->  exp .   (rule 1)
    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 1 (program)



state 14

    exp  ->  ID LPAREN . RPAREN   (rule 46)
    exp  ->  ID LPAREN . exp exp_com RPAREN   (rule 47)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    RPAREN	shift, and go to state 48
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 49



state 15

    exp  ->  ID LBRACK . exp RBRACK OF exp   (rule 55)
    exp  ->  ID LBRACK . exp RBRACK   (rule 56)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 50



state 16

    exp  ->  ID LBRACE . ID EQ exp exp_comeq RBRACE   (rule 53)
    exp  ->  ID LBRACE . RBRACE   (rule 54)

    ID  	shift, and go to state 51
    RBRACE	shift, and go to state 52



state 17

    exp  ->  ID ASSIGN . exp   (rule 39)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 53



state 18

    exp  ->  LPAREN RPAREN .   (rule 48)

    $default	reduce using rule 48 (exp)



state 19

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    expseq  ->  exp . exp_ext   (rule 63)

    SEMICOLON	shift, and go to state 54
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 62 (exp_ext)

    exp_ext	go to state 55



state 20

    exp  ->  LPAREN expseq . RPAREN   (rule 41)

    RPAREN	shift, and go to state 56



state 21

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  MINUS exp .   (rule 30)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)


    $default	reduce using rule 30 (exp)



state 22

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  IF exp . THEN exp   (rule 49)
    exp  ->  IF exp . THEN exp ELSE exp   (rule 50)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    THEN	shift, and go to state 57



state 23

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  WHILE exp . DO exp   (rule 51)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    DO  	shift, and go to state 58



state 24

    exp  ->  FOR ID . ASSIGN exp TO exp DO exp   (rule 52)

    ASSIGN	shift, and go to state 59



state 25

    fundec  ->  FUNCTION . ID LPAREN tyfields RPAREN EQ exp   (rule 19)
    fundec  ->  FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp   (rule 20)

    ID  	shift, and go to state 60



state 26

    vardec  ->  VAR . ID ASSIGN exp   (rule 17)
    vardec  ->  VAR . ID COLON ID ASSIGN exp   (rule 18)

    ID  	shift, and go to state 61



state 27

    tydec  ->  TYPE . ID EQ ty   (rule 9)

    ID  	shift, and go to state 62



state 28

    exp  ->  LET decs . IN expseq END   (rule 43)

    IN  	shift, and go to state 63



state 29

    decs  ->  dec . decs_ext   (rule 2)

    FUNCTION	shift, and go to state 25
    VAR 	shift, and go to state 26
    TYPE	shift, and go to state 27

    $default	reduce using rule 4 (decs_ext)

    decs_ext	go to state 64
    dec 	go to state 65
    tydec	go to state 30
    vardec	go to state 31
    fundec	go to state 32



state 30

    dec  ->  tydec .   (rule 6)

    $default	reduce using rule 6 (dec)



state 31

    dec  ->  vardec .   (rule 7)

    $default	reduce using rule 7 (dec)



state 32

    dec  ->  fundec .   (rule 8)

    $default	reduce using rule 8 (dec)



state 33

    lvalue  ->  lvalue LBRACK . exp RBRACK   (rule 23)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 66



state 34

    lvalue  ->  lvalue DOT . ID   (rule 22)

    ID  	shift, and go to state 67



state 35

    exp  ->  lvalue ASSIGN . exp   (rule 45)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 68



state 36

    exp  ->  exp PLUS . exp   (rule 26)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 69



state 37

    exp  ->  exp MINUS . exp   (rule 27)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 70



state 38

    exp  ->  exp TIMES . exp   (rule 28)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 71



state 39

    exp  ->  exp DIVIDE . exp   (rule 29)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 72



state 40

    exp  ->  exp EQ . exp   (rule 31)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 73



state 41

    exp  ->  exp NEQ . exp   (rule 32)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 74



state 42

    exp  ->  exp LT . exp   (rule 33)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 75



state 43

    exp  ->  exp LE . exp   (rule 34)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 76



state 44

    exp  ->  exp GT . exp   (rule 35)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 77



state 45

    exp  ->  exp GE . exp   (rule 36)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 78



state 46

    exp  ->  exp AND . exp   (rule 37)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 79



state 47

    exp  ->  exp OR . exp   (rule 38)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 80



state 48

    exp  ->  ID LPAREN RPAREN .   (rule 46)

    $default	reduce using rule 46 (exp)



state 49

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  ID LPAREN exp . exp_com RPAREN   (rule 47)

    COMMA	shift, and go to state 81
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 58 (exp_com)

    exp_com	go to state 82



state 50

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  ID LBRACK exp . RBRACK OF exp   (rule 55)
    exp  ->  ID LBRACK exp . RBRACK   (rule 56)

    RBRACK	shift, and go to state 83
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47



state 51

    exp  ->  ID LBRACE ID . EQ exp exp_comeq RBRACE   (rule 53)

    EQ  	shift, and go to state 84



state 52

    exp  ->  ID LBRACE RBRACE .   (rule 54)

    $default	reduce using rule 54 (exp)



state 53

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  ID ASSIGN exp .   (rule 39)


    $default	reduce using rule 39 (exp)



state 54

    exp_ext  ->  SEMICOLON . exp exp_ext   (rule 61)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 85



state 55

    expseq  ->  exp exp_ext .   (rule 63)

    $default	reduce using rule 63 (expseq)



state 56

    exp  ->  LPAREN expseq RPAREN .   (rule 41)

    $default	reduce using rule 41 (exp)



state 57

    exp  ->  IF exp THEN . exp   (rule 49)
    exp  ->  IF exp THEN . exp ELSE exp   (rule 50)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 86



state 58

    exp  ->  WHILE exp DO . exp   (rule 51)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 87



state 59

    exp  ->  FOR ID ASSIGN . exp TO exp DO exp   (rule 52)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 88



state 60

    fundec  ->  FUNCTION ID . LPAREN tyfields RPAREN EQ exp   (rule 19)
    fundec  ->  FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp   (rule 20)

    LPAREN	shift, and go to state 89



state 61

    vardec  ->  VAR ID . ASSIGN exp   (rule 17)
    vardec  ->  VAR ID . COLON ID ASSIGN exp   (rule 18)

    COLON	shift, and go to state 90
    ASSIGN	shift, and go to state 91



state 62

    tydec  ->  TYPE ID . EQ ty   (rule 9)

    EQ  	shift, and go to state 92



state 63

    exp  ->  LET decs IN . expseq END   (rule 43)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    $default	reduce using rule 64 (expseq)

    lvalue	go to state 12
    exp 	go to state 19
    expseq	go to state 93



state 64

    decs  ->  dec decs_ext .   (rule 2)

    $default	reduce using rule 2 (decs)



state 65

    decs_ext  ->  dec . decs_ext   (rule 5)

    FUNCTION	shift, and go to state 25
    VAR 	shift, and go to state 26
    TYPE	shift, and go to state 27

    $default	reduce using rule 4 (decs_ext)

    decs_ext	go to state 94
    dec 	go to state 65
    tydec	go to state 30
    vardec	go to state 31
    fundec	go to state 32



state 66

    lvalue  ->  lvalue LBRACK exp . RBRACK   (rule 23)
    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    RBRACK	shift, and go to state 95
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47



state 67

    lvalue  ->  lvalue DOT ID .   (rule 22)

    $default	reduce using rule 22 (lvalue)



state 68

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  lvalue ASSIGN exp .   (rule 45)


    $default	reduce using rule 45 (exp)



state 69

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp PLUS exp .   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 26 (exp)



state 70

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp MINUS exp .   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 27 (exp)



state 71

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp TIMES exp .   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)


    $default	reduce using rule 28 (exp)



state 72

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp DIVIDE exp .   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)


    $default	reduce using rule 29 (exp)



state 73

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp EQ exp .   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 31 (exp)



state 74

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp NEQ exp .   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 32 (exp)



state 75

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp LT exp .   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 33 (exp)



state 76

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp LE exp .   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 34 (exp)



state 77

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp GT exp .   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 35 (exp)



state 78

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp GE exp .   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39

    $default	reduce using rule 36 (exp)



state 79

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp AND exp .   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45

    $default	reduce using rule 37 (exp)



state 80

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  exp OR exp .   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46

    $default	reduce using rule 38 (exp)



state 81

    exp_com  ->  COMMA . exp exp_com   (rule 57)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 96



state 82

    exp  ->  ID LPAREN exp exp_com . RPAREN   (rule 47)

    RPAREN	shift, and go to state 97



state 83

    exp  ->  ID LBRACK exp RBRACK . OF exp   (rule 55)
    exp  ->  ID LBRACK exp RBRACK .   (rule 56)

    OF  	shift, and go to state 98

    $default	reduce using rule 56 (exp)



state 84

    exp  ->  ID LBRACE ID EQ . exp exp_comeq RBRACE   (rule 53)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 99



state 85

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp_ext  ->  SEMICOLON exp . exp_ext   (rule 61)

    SEMICOLON	shift, and go to state 54
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 62 (exp_ext)

    exp_ext	go to state 100



state 86

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  IF exp THEN exp .   (rule 49)
    exp  ->  IF exp THEN exp . ELSE exp   (rule 50)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    ELSE	shift, and go to state 101

    PLUS	[reduce using rule 49 (exp)]
    MINUS	[reduce using rule 49 (exp)]
    TIMES	[reduce using rule 49 (exp)]
    DIVIDE	[reduce using rule 49 (exp)]
    EQ  	[reduce using rule 49 (exp)]
    NEQ 	[reduce using rule 49 (exp)]
    LT  	[reduce using rule 49 (exp)]
    LE  	[reduce using rule 49 (exp)]
    GT  	[reduce using rule 49 (exp)]
    GE  	[reduce using rule 49 (exp)]
    AND 	[reduce using rule 49 (exp)]
    OR  	[reduce using rule 49 (exp)]
    ELSE	[reduce using rule 49 (exp)]
    $default	reduce using rule 49 (exp)



state 87

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  WHILE exp DO exp .   (rule 51)


    $default	reduce using rule 51 (exp)



state 88

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  FOR ID ASSIGN exp . TO exp DO exp   (rule 52)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    TO  	shift, and go to state 102



state 89

    fundec  ->  FUNCTION ID LPAREN . tyfields RPAREN EQ exp   (rule 19)
    fundec  ->  FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp   (rule 20)

    ID  	shift, and go to state 103

    $default	reduce using rule 13 (tyfields)

    tyfields	go to state 104



state 90

    vardec  ->  VAR ID COLON . ID ASSIGN exp   (rule 18)

    ID  	shift, and go to state 105



state 91

    vardec  ->  VAR ID ASSIGN . exp   (rule 17)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 106



state 92

    tydec  ->  TYPE ID EQ . ty   (rule 9)

    ID  	shift, and go to state 107
    LBRACE	shift, and go to state 108
    ARRAY	shift, and go to state 109

    ty  	go to state 110



state 93

    exp  ->  LET decs IN expseq . END   (rule 43)

    END 	shift, and go to state 111



state 94

    decs_ext  ->  dec decs_ext .   (rule 5)

    $default	reduce using rule 5 (decs_ext)



state 95

    lvalue  ->  lvalue LBRACK exp RBRACK .   (rule 23)

    $default	reduce using rule 23 (lvalue)



state 96

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp_com  ->  COMMA exp . exp_com   (rule 57)

    COMMA	shift, and go to state 81
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 58 (exp_com)

    exp_com	go to state 112



state 97

    exp  ->  ID LPAREN exp exp_com RPAREN .   (rule 47)

    $default	reduce using rule 47 (exp)



state 98

    exp  ->  ID LBRACK exp RBRACK OF . exp   (rule 55)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 113



state 99

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  ID LBRACE ID EQ exp . exp_comeq RBRACE   (rule 53)

    COMMA	shift, and go to state 114
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 60 (exp_comeq)

    exp_comeq	go to state 115



state 100

    exp_ext  ->  SEMICOLON exp exp_ext .   (rule 61)

    $default	reduce using rule 61 (exp_ext)



state 101

    exp  ->  IF exp THEN exp ELSE . exp   (rule 50)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 116



state 102

    exp  ->  FOR ID ASSIGN exp TO . exp DO exp   (rule 52)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 117



state 103

    tyfields  ->  ID . COLON ID tyfields_ext   (rule 14)

    COLON	shift, and go to state 118



state 104

    fundec  ->  FUNCTION ID LPAREN tyfields . RPAREN EQ exp   (rule 19)
    fundec  ->  FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp   (rule 20)

    RPAREN	shift, and go to state 119



state 105

    vardec  ->  VAR ID COLON ID . ASSIGN exp   (rule 18)

    ASSIGN	shift, and go to state 120



state 106

    vardec  ->  VAR ID ASSIGN exp .   (rule 17)
    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 17 (vardec)



state 107

    ty  ->  ID .   (rule 10)

    $default	reduce using rule 10 (ty)



state 108

    ty  ->  LBRACE . tyfields RBRACE   (rule 11)

    ID  	shift, and go to state 103

    $default	reduce using rule 13 (tyfields)

    tyfields	go to state 121



state 109

    ty  ->  ARRAY . OF ID   (rule 12)

    OF  	shift, and go to state 122



state 110

    tydec  ->  TYPE ID EQ ty .   (rule 9)

    $default	reduce using rule 9 (tydec)



state 111

    exp  ->  LET decs IN expseq END .   (rule 43)

    $default	reduce using rule 43 (exp)



state 112

    exp_com  ->  COMMA exp exp_com .   (rule 57)

    $default	reduce using rule 57 (exp_com)



state 113

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  ID LBRACK exp RBRACK OF exp .   (rule 55)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    PLUS	[reduce using rule 55 (exp)]
    MINUS	[reduce using rule 55 (exp)]
    TIMES	[reduce using rule 55 (exp)]
    DIVIDE	[reduce using rule 55 (exp)]
    EQ  	[reduce using rule 55 (exp)]
    NEQ 	[reduce using rule 55 (exp)]
    LT  	[reduce using rule 55 (exp)]
    LE  	[reduce using rule 55 (exp)]
    GT  	[reduce using rule 55 (exp)]
    GE  	[reduce using rule 55 (exp)]
    AND 	[reduce using rule 55 (exp)]
    OR  	[reduce using rule 55 (exp)]
    $default	reduce using rule 55 (exp)



state 114

    exp_comeq  ->  COMMA . ID EQ exp exp_comeq   (rule 59)

    ID  	shift, and go to state 123



state 115

    exp  ->  ID LBRACE ID EQ exp exp_comeq . RBRACE   (rule 53)

    RBRACE	shift, and go to state 124



state 116

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  IF exp THEN exp ELSE exp .   (rule 50)


    $default	reduce using rule 50 (exp)



state 117

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  FOR ID ASSIGN exp TO exp . DO exp   (rule 52)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47
    DO  	shift, and go to state 125



state 118

    tyfields  ->  ID COLON . ID tyfields_ext   (rule 14)

    ID  	shift, and go to state 126



state 119

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN . EQ exp   (rule 19)
    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp   (rule 20)

    COLON	shift, and go to state 127
    EQ  	shift, and go to state 128



state 120

    vardec  ->  VAR ID COLON ID ASSIGN . exp   (rule 18)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 129



state 121

    ty  ->  LBRACE tyfields . RBRACE   (rule 11)

    RBRACE	shift, and go to state 130



state 122

    ty  ->  ARRAY OF . ID   (rule 12)

    ID  	shift, and go to state 131



state 123

    exp_comeq  ->  COMMA ID . EQ exp exp_comeq   (rule 59)

    EQ  	shift, and go to state 132



state 124

    exp  ->  ID LBRACE ID EQ exp exp_comeq RBRACE .   (rule 53)

    $default	reduce using rule 53 (exp)



state 125

    exp  ->  FOR ID ASSIGN exp TO exp DO . exp   (rule 52)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 133



state 126

    tyfields  ->  ID COLON ID . tyfields_ext   (rule 14)

    COMMA	shift, and go to state 134

    $default	reduce using rule 16 (tyfields_ext)

    tyfields_ext	go to state 135



state 127

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp   (rule 20)

    ID  	shift, and go to state 136



state 128

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN EQ . exp   (rule 19)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 137



state 129

    vardec  ->  VAR ID COLON ID ASSIGN exp .   (rule 18)
    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 18 (vardec)



state 130

    ty  ->  LBRACE tyfields RBRACE .   (rule 11)

    $default	reduce using rule 11 (ty)



state 131

    ty  ->  ARRAY OF ID .   (rule 12)

    $default	reduce using rule 12 (ty)



state 132

    exp_comeq  ->  COMMA ID EQ . exp exp_comeq   (rule 59)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 138



state 133

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp  ->  FOR ID ASSIGN exp TO exp DO exp .   (rule 52)


    $default	reduce using rule 52 (exp)



state 134

    tyfields_ext  ->  COMMA . ID COLON ID tyfields_ext   (rule 15)

    ID  	shift, and go to state 139



state 135

    tyfields  ->  ID COLON ID tyfields_ext .   (rule 14)

    $default	reduce using rule 14 (tyfields)



state 136

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp   (rule 20)

    EQ  	shift, and go to state 140



state 137

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN EQ exp .   (rule 19)
    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 19 (fundec)



state 138

    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)
    exp_comeq  ->  COMMA ID EQ exp . exp_comeq   (rule 59)

    COMMA	shift, and go to state 114
    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 60 (exp_comeq)

    exp_comeq	go to state 141



state 139

    tyfields_ext  ->  COMMA ID . COLON ID tyfields_ext   (rule 15)

    COLON	shift, and go to state 142



state 140

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp   (rule 20)

    ID  	shift, and go to state 1
    STRING	shift, and go to state 2
    INT 	shift, and go to state 3
    LPAREN	shift, and go to state 4
    MINUS	shift, and go to state 5
    IF  	shift, and go to state 6
    WHILE	shift, and go to state 7
    FOR 	shift, and go to state 8
    LET 	shift, and go to state 9
    BREAK	shift, and go to state 10
    NIL 	shift, and go to state 11

    lvalue	go to state 12
    exp 	go to state 143



state 141

    exp_comeq  ->  COMMA ID EQ exp exp_comeq .   (rule 59)

    $default	reduce using rule 59 (exp_comeq)



state 142

    tyfields_ext  ->  COMMA ID COLON . ID tyfields_ext   (rule 15)

    ID  	shift, and go to state 144



state 143

    fundec  ->  FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .   (rule 20)
    exp  ->  exp . PLUS exp   (rule 26)
    exp  ->  exp . MINUS exp   (rule 27)
    exp  ->  exp . TIMES exp   (rule 28)
    exp  ->  exp . DIVIDE exp   (rule 29)
    exp  ->  exp . EQ exp   (rule 31)
    exp  ->  exp . NEQ exp   (rule 32)
    exp  ->  exp . LT exp   (rule 33)
    exp  ->  exp . LE exp   (rule 34)
    exp  ->  exp . GT exp   (rule 35)
    exp  ->  exp . GE exp   (rule 36)
    exp  ->  exp . AND exp   (rule 37)
    exp  ->  exp . OR exp   (rule 38)

    PLUS	shift, and go to state 36
    MINUS	shift, and go to state 37
    TIMES	shift, and go to state 38
    DIVIDE	shift, and go to state 39
    EQ  	shift, and go to state 40
    NEQ 	shift, and go to state 41
    LT  	shift, and go to state 42
    LE  	shift, and go to state 43
    GT  	shift, and go to state 44
    GE  	shift, and go to state 45
    AND 	shift, and go to state 46
    OR  	shift, and go to state 47

    $default	reduce using rule 20 (fundec)



state 144

    tyfields_ext  ->  COMMA ID COLON ID . tyfields_ext   (rule 15)

    COMMA	shift, and go to state 134

    $default	reduce using rule 16 (tyfields_ext)

    tyfields_ext	go to state 145



state 145

    tyfields_ext  ->  COMMA ID COLON ID tyfields_ext .   (rule 15)

    $default	reduce using rule 15 (tyfields_ext)



state 146

    $   	go to state 147



state 147

    $   	go to state 148



state 148

    $default	accept
